#
#	File:		family.txt
#	Scope:		Used by the Thinknowlogy application
#	Purpose:	To demonstrate conclusions, assumptions and questions
#			independently created by software.
#	Version:	Thinknowlogy 2012 (release 2)
#----------------------------------------------------------------------------
#	Thinknowlogy is grammar-based software,
#	designed to utilize the intelligence contained within grammar,
#	in order to create intelligence through natural language in software,
#	which is demonstrated by:
#	- Programming in natural language;
#	- Reasoning in natural language:
#		- drawing conclusions,
#		- making assumptions (with self-adjusting level of uncertainty),
#		- asking questions about gaps in the knowledge,
#		- detecting conflicts in the knowledge;
#	- Detection of semantic ambiguity (static as well as dynamic);
#	- Intelligent answering of "is" questions (by providing alternatives).
#----------------------------------------------------------------------------
#	Copyright (C) 2009-2012, Menno Mafait
#
#	Your additions, modifications, suggestions and bug reports
#	are welcome at http://mafait.org
#----------------------------------------------------------------------------
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 2 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License along
#	with this program; if not, write to the Free Software Foundation, Inc.,
#	51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#----------------------------------------------------------------------------

# The definition of a family.

A person is a man or a woman.
A family has parents and children.
A parent is a father or a mother.
A child is a son or a daughter.
A father is a man.
A mother is a woman.
A son is a man.
A daughter is a woman.

#C++# Now type sentences like these:
#C++#
#C++# John is the father and Ann is the mother of Paul, Joe and Laura.
#C++# Paul is a son.			Paul is a man.
#C++# Joe is a son.			Joe is a man.
#C++# Laura is a daughter.		Laura is a woman.
#C++# John is a father.			John is a parent.
#C++# Ann is a mother.			Ann is a parent.
#C++# Show info about John.		Show info about Ann.
#C++# Show info about Paul.		Show info about Laura.
#C++# Paul is a son of John and Ann.
#C++# Joe is a son of John and Ann.
#C++# Laura is a daughter of John and Ann.
#C++#
#C++# See the text on the buttons of the family screen shots
#C++# (in subdirectoy screenshots\) for more examples.
#C++#
# Try the sentences in all kind of combinations and different order.
# Use "Clear your mind.", "Undo." or "Restart." for a retry.
